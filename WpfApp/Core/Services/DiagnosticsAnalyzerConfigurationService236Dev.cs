using Newtonsoft.Json;
using RoslynLibrary.Models;
using RoslynLibrary.Services.Interfaces;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace WpfApp.Core.Services
{
    internal class DiagnosticsAnalyzerConfigurationService236Dev : IDiagnosticsAnalyzerConfigurationService
    {
        private const string _jsonHooks = "{\r\n  \"OnDoorKnocked(DoorKnocker,BasePlayer)\": \"\",\r\n  \"OnGrowableGather(GrowableEntity,BasePlayer,bool)\": \"OnGrowableGathered(GrowableEntity,Item,BasePlayer)\",\r\n  \"CanBeHomingTargeted(PlayerHelicopter)\": \"\",\r\n  \"OnTrapSnapped(BaseTrapTrigger,UnityEngine.GameObject,UnityEngine.Collider)\": \"OnTrapSnapped(BaseTrapTrigger,UnityEngine.GameObject)\",\r\n  \"OnCodeChanged(BasePlayer,CodeLock,string,bool)\": \"\",\r\n  \"OnItemCraftFinished(ItemCraftTask,Item,ItemCrafter)\": \"OnItemCraftFinished(ItemCraftTask,Item)\",\r\n  \"CanUnlock(BasePlayer,ModularCarCodeLock,string)\": \"CanUnlock(BasePlayer,KeyLock)\",\r\n  \"OnAdventGiftAward(AdventCalendar,BasePlayer)\": \"\",\r\n  \"OnFishCatch(Item,BaseFishingRod,BasePlayer)\": \"\",\r\n  \"OnWildlifeTrap(WildlifeTrap,TrappableWildlife)\": \"\",\r\n  \"CanBeRecycled(Item,Recycler)\": \"\",\r\n  \"CanReceiveCall(PhoneController)\": \"\",\r\n  \"OnPhoneCallStarted(PhoneController,PhoneController,BasePlayer)\": \"\",\r\n  \"OnSignUpdated(CarvablePumpkin,BasePlayer)\": \"OnSignUpdated(Signage,BasePlayer)\",\r\n  \"OnVendingShopOpen(VendingMachine,BasePlayer)\": \"\",\r\n  \"OnClientProjectileEffectCreate(Network.Connection,BaseProjectile,string)\": \"\",\r\n  \"CanElevatorLiftMove(ElevatorLift)\": \"\",\r\n  \"OnOvenStart(BaseOven)\": \"\",\r\n  \"OnCorpsePopulate(ScarecrowNPC,NPCPlayerCorpse)\": \"OnCorpsePopulate(NPCMurderer,NPCPlayerCorpse)\",\r\n  \"OnItemStacked(Item,Item,ItemContainer)\": \"\",\r\n  \"OnServerRestart(string,int)\": \"\",\r\n  \"OnPhoneAnswer(PhoneController,PhoneController)\": \"\",\r\n  \"OnOvenTemperature(BaseOven,int)\": \"\",\r\n  \"OnItemSubmit(Item,Mailbox,BasePlayer)\": \"\",\r\n  \"OnStashExposed(StashContainer,BasePlayer)\": \"\",\r\n  \"OnPhoneDialTimeout(PhoneController,PhoneController,BasePlayer)\": \"\",\r\n  \"OnCCTVDirectionChange(CCTV_RC,BasePlayer)\": \"\",\r\n  \"OnWaterCollect(WaterCatcher)\": \"\",\r\n  \"OnMapMarkersClear(BasePlayer,System.Collections.Generic.List<ProtoBuf.MapNote>)\": \"OnMapMarkersClear(BasePlayer,ProtoBuf.MapNote)\",\r\n  \"OnFuelCheck(EntityFuelSystem)\": \"\",\r\n  \"OnSamSiteTargetScan(SamSite,System.Collections.Generic.List<SamSite.ISamSiteTarget>)\": \"\",\r\n  \"OnSupplyDropDropped(BaseEntity,CargoPlane)\": \"\",\r\n  \"CanUseFuel(EntityFuelSystem,StorageContainer,float,float)\": \"\",\r\n  \"OnDecayDamage(DecayEntity)\": \"\",\r\n  \"OnActiveItemChange(BasePlayer,Item,ItemId)\": \"OnActiveItemChange(BasePlayer,Item,uint)\",\r\n  \"OnOvenStarted(BaseOven)\": \"\",\r\n  \"OnSignalBroadcast(BaseEntity,Network.Connection)\": \"OnSignalBroadcast(BaseEntity)\",\r\n  \"OnInventoryNetworkUpdate(PlayerInventory,ItemContainer,ProtoBuf.UpdateItemContainer,PlayerInventory.Type,bool)\": \"\",\r\n  \"OnGrowableStateChange(GrowableEntity,PlantProperties.State)\": \"\",\r\n  \"OnRackedWeaponLoad(Item,ItemDefinition,BasePlayer,WeaponRack)\": \"\",\r\n  \"OnItemDeployed(Deployer,BaseEntity,BaseEntity)\": \"OnItemDeployed(Deployer,BaseEntity)\",\r\n  \"OnStructureUpgrade(BuildingBlock,BasePlayer,BuildingGrade.Enum,ulong)\": \"OnStructureUpgrade(BuildingBlock,BasePlayer,BuildingGrade.Enum)\",\r\n  \"OnBookmarkControlEnded(ComputerStation,BasePlayer,IRemoteControllable)\": \"\",\r\n  \"OnWireConnect(BasePlayer,BaseNetworkable,int,BaseNetworkable,int,System.Collections.Generic.List<UnityEngine.Vector3>)\": \"OnWireConnect(BasePlayer,IOEntity,int,IOEntity,int)\",\r\n  \"CanUseGesture(BasePlayer,GestureConfig)\": \"\",\r\n  \"OnSprayRemove(SprayCanSpray,BasePlayer)\": \"\",\r\n  \"OnServerRestartInterrupt()\": \"\",\r\n  \"OnTechTreeNodeUnlocked(Workbench,TechTreeData.NodeInstance,BasePlayer)\": \"\",\r\n  \"OnLiquidWeaponFired(LiquidWeapon,BasePlayer)\": \"\",\r\n  \"OnCorpsePopulate(GingerbreadNPC,NPCPlayerCorpse)\": \"OnCorpsePopulate(NPCMurderer,NPCPlayerCorpse)\",\r\n  \"OnPhoneDial(PhoneController,PhoneController,BasePlayer)\": \"\",\r\n  \"OnInventoryItemsTake(PlayerInventory,System.Collections.Generic.List<Item>,int,int)\": \"\",\r\n  \"CanBeHomingTargeted(PatrolHelicopter)\": \"\",\r\n  \"OnAdventGiftAwarded(AdventCalendar,BasePlayer)\": \"\",\r\n  \"OnAmmoSwitch(BaseProjectile,BasePlayer,ItemDefinition)\": \"\",\r\n  \"OnInterferenceOthersUpdate(AutoTurret)\": \"\",\r\n  \"OnFireworkExhausted(BaseFirework)\": \"\",\r\n  \"OnVehicleLockRequest(ModularCarGarage,BasePlayer,string)\": \"\",\r\n  \"OnServerInformationUpdated()\": \"\",\r\n  \"CanMoveItem(Item,PlayerInventory,ItemContainerId,int,int,bool)\": \"CanMoveItem(Item,PlayerInventory,uint,int,int)\",\r\n  \"OnRackedWeaponTaken(Item,BasePlayer,WeaponRack)\": \"\",\r\n  \"CanAffordUpgrade(BasePlayer,BuildingBlock,BuildingGrade.Enum,ulong)\": \"CanAffordUpgrade(BasePlayer,BuildingBlock,BuildingGrade.Enum)\",\r\n  \"OnCupboardAuthorize(BuildingPrivlidge,BasePlayer)\": \"\",\r\n  \"OnMagazineReload(BaseProjectile,IAmmoContainer,BasePlayer)\": \"\",\r\n  \"OnFireworkDesignChange(PatternFirework,ProtoBuf.PatternFirework.Design,BasePlayer)\": \"\",\r\n  \"OnFeedbackReported(BasePlayer,string,string,Facepunch.Models.ReportType)\": \"\",\r\n  \"OnQueueCycle(int)\": \"\",\r\n  \"OnBuildingMerge(ServerBuildingManager,BuildingManager.Building,BuildingManager.Building)\": \"\",\r\n  \"OnConnectionDequeue(Network.Connection)\": \"\",\r\n  \"OnLootNetworkUpdate(PlayerLoot)\": \"\",\r\n  \"CanUnlockTechTreeNode(BasePlayer,TechTreeData.NodeInstance,TechTreeData)\": \"\",\r\n  \"OnMlrsFire(MLRS,BasePlayer)\": \"\",\r\n  \"OnTimedExplosiveExplode(TimedExplosive,UnityEngine.Vector3)\": \"\",\r\n  \"OnFireworkDesignChanged(PatternFirework,ProtoBuf.PatternFirework.Design,BasePlayer)\": \"\",\r\n  \"OnVendingShopOpen(InvisibleVendingMachine,BasePlayer)\": \"\",\r\n  \"OnSleepingBagDestroy(SleepingBag,ulong)\": \"OnSleepingBagDestroy(SleepingBag,BasePlayer)\",\r\n  \"OnRackedWeaponUnload(Item,BasePlayer,WeaponRack)\": \"\",\r\n  \"CanCatchFish(BasePlayer,BaseFishingRod,Item)\": \"\",\r\n  \"OnPhoneNameUpdate(PhoneController,string,BasePlayer)\": \"\",\r\n  \"OnXmasStockingFill(Stocking)\": \"\",\r\n  \"OnThreatLevelUpdate(BasePlayer)\": \"\",\r\n  \"CanBeHomingTargeted(BaseHelicopter)\": \"\",\r\n  \"OnVendingShopOpened(InvisibleVendingMachine,BasePlayer)\": \"\",\r\n  \"OnPatrolHelicopterTakeDamage(PatrolHelicopter,HitInfo)\": \"\",\r\n  \"OnWindmillUpdate(ElectricWindmill)\": \"\",\r\n  \"OnFindSpawnPoint(BasePlayer)\": \"OnFindSpawnPoint()\",\r\n  \"OnTurretAssign(AutoTurret,ulong,BasePlayer)\": \"\",\r\n  \"CanCastFishingRod(BasePlayer,BaseFishingRod,Item,UnityEngine.Vector3)\": \"\",\r\n  \"OnMapMarkersCleared(BasePlayer)\": \"OnMapMarkersCleared(BasePlayer,ProtoBuf.MapNote)\",\r\n  \"CanPurchaseItem(BasePlayer,Item,System.Action<BasePlayer, Item>,VendingMachine,ItemContainer)\": \"\",\r\n  \"OnSprinklerSplashed(Sprinkler)\": \"\",\r\n  \"CanDeployItem(BasePlayer,Deployer,NetworkableId)\": \"CanDeployItem(BasePlayer,Deployer,uint)\",\r\n  \"OnWaterCollect(WaterPump,ItemDefinition)\": \"\",\r\n  \"CanWaterBallSplash(ItemDefinition,UnityEngine.Vector3,float,int)\": \"\",\r\n  \"OnLiquidWeaponFiringStopped(LiquidWeapon)\": \"\",\r\n  \"OnFireworkStarted(BaseFirework)\": \"\",\r\n  \"OnMissionSucceeded(BaseMission,BaseMission.MissionInstance,BasePlayer)\": \"\",\r\n  \"OnTerrainCreate(TerrainGenerator)\": \"\",\r\n  \"OnPhoneNameUpdated(PhoneController,string,BasePlayer)\": \"\",\r\n  \"OnLiquidVesselFill(BaseLiquidVessel,BasePlayer,LiquidContainer)\": \"\",\r\n  \"OnMapMarkerRemove(BasePlayer,System.Collections.Generic.List<ProtoBuf.MapNote>,int)\": \"OnMapMarkerRemove(BasePlayer,ProtoBuf.MapNote)\",\r\n  \"OnEntityControl(AutoTurret,ulong)\": \"OnEntityControl(RemoteControlEntity)\",\r\n  \"OnResearchCostDetermine(Item)\": \"\",\r\n  \"CanChangeGrade(BasePlayer,BuildingBlock,BuildingGrade.Enum,ulong)\": \"CanChangeGrade(BasePlayer,BuildingBlock,BuildingGrade.Enum)\",\r\n  \"CanBeHomingTargeted(RoadFlare)\": \"\",\r\n  \"CanLootEntity(BasePlayer,IndustrialCrafter)\": \"CanLootEntity(BasePlayer,BaseRidableAnimal)\",\r\n  \"OnTurretAssigned(AutoTurret,ulong,BasePlayer)\": \"\",\r\n  \"OnInventoryAmmoFind(PlayerInventory,System.Collections.Generic.List<Item>,Rust.AmmoTypes)\": \"\",\r\n  \"OnPhoneDialFail(PhoneController,Telephone.DialFailReason,BasePlayer)\": \"\",\r\n  \"OnFireworkDamage(BaseFirework,HitInfo)\": \"\",\r\n  \"OnRackedWeaponMount(Item,BasePlayer,WeaponRack)\": \"\",\r\n  \"OnEntityLoaded(BaseNetworkable,BaseNetworkable.LoadInfo)\": \"\",\r\n  \"OnBuildingSplit(BuildingManager.Building,uint)\": \"\",\r\n  \"OnPortalUsed(BasePlayer,BasePortal)\": \"\",\r\n  \"CanTrainCarCouple(TrainCar,TrainCar)\": \"\",\r\n  \"OnFlameExplosion(FlameExplosive,UnityEngine.Collider)\": \"OnFlameExplosion(FlameExplosive,BaseEntity)\",\r\n  \"OnNpcTargetSense(BaseEntity,BaseEntity,AIBrainSenses)\": \"\",\r\n  \"OnSleepingBagValidCheck(SleepingBag,ulong,bool)\": \"\",\r\n  \"OnMlrsTargetSet(MLRS,UnityEngine.Vector3,BasePlayer)\": \"\",\r\n  \"OnStashHidden(StashContainer,BasePlayer)\": \"\",\r\n  \"OnBradleyApcThink(BradleyAPC)\": \"\",\r\n  \"OnVendingShopOpened(VendingMachine,BasePlayer)\": \"\",\r\n  \"OnMissionFailed(BaseMission,BaseMission.MissionInstance,BasePlayer,BaseMission.MissionFailReason)\": \"\",\r\n  \"OnRespawnInformationGiven(BasePlayer,System.Collections.Generic.List<ProtoBuf.RespawnInformation.SpawnOptions>)\": \"\",\r\n  \"OnFuelAmountCheck(EntityFuelSystem,Item)\": \"\",\r\n  \"OnSamSiteTarget(SamSite,SamSite.ISamSiteTarget)\": \"OnSamSiteTarget(SamSite,BaseCombatEntity)\",\r\n  \"OnSignUpdated(Signage,BasePlayer,int)\": \"OnSignUpdated(Signage,BasePlayer)\",\r\n  \"OnInventoryAmmoItemFind(PlayerInventory,ItemDefinition)\": \"\",\r\n  \"OnDieselEngineToggle(DieselEngine,BasePlayer)\": \"OnDieselEngineToggled(DieselEngine)\",\r\n  \"OnFishingStopped(BaseFishingRod,BaseFishingRod.FailReason)\": \"\",\r\n  \"OnMlrsFiringEnded(MLRS)\": \"\",\r\n  \"OnDroppedItemCombined(DroppedItem)\": \"\",\r\n  \"OnPhoneDialFailed(PhoneController,Telephone.DialFailReason,BasePlayer)\": \"\",\r\n  \"OnPlayerRecover(BasePlayer)\": \"OnPlayerRecovered(BasePlayer)\",\r\n  \"CanBeAwardedAdventGift(AdventCalendar,BasePlayer)\": \"\",\r\n  \"OnVehicleHornPressed(VehicleModuleSeating,BasePlayer)\": \"\",\r\n  \"OnConnectionQueue(Network.Connection)\": \"\",\r\n  \"OnEntityPickedUp(BaseCombatEntity,Item,BasePlayer)\": \"\",\r\n  \"OnWorldProjectileCreate(HitInfo,Item)\": \"\",\r\n  \"OnExplosiveFuseSet(TimedExplosive,float)\": \"\",\r\n  \"OnRackedWeaponMounted(Item,BasePlayer,WeaponRack)\": \"\",\r\n  \"OnPlayerColliderEnable(BasePlayer,UnityEngine.CapsuleCollider)\": \"\",\r\n  \"OnInventoryItemsFind(PlayerInventory,int)\": \"\",\r\n  \"OnNpcConversationEnded(NPCTalking,BasePlayer)\": \"\",\r\n  \"OnHuntEventEnd(EggHuntEvent)\": \"\",\r\n  \"OnRackedWeaponTake(Item,BasePlayer,WeaponRack)\": \"\",\r\n  \"OnBookmarkControlStarted(ComputerStation,BasePlayer,string,IRemoteControllable)\": \"\",\r\n  \"OnPlayerWound(BasePlayer,HitInfo)\": \"OnPlayerWound(BasePlayer,BasePlayer)\",\r\n  \"OnPhoneCallStart(PhoneController,PhoneController,BasePlayer)\": \"\",\r\n  \"CanDesignFirework(BasePlayer,PatternFirework)\": \"\",\r\n  \"OnDispenserGather(ResourceDispenser,BasePlayer,Item)\": \"OnDispenserGather(ResourceDispenser,BaseEntity,Item)\",\r\n  \"OnPlayerWantsMount(BaseVehicle,BaseMountable)\": \"OnPlayerWantsMount(BasePlayer,BaseMountable)\",\r\n  \"OnLootEntityEnd(BasePlayer,ItemBasedFlowRestrictor)\": \"OnLootEntityEnd(BasePlayer,ContainerIOEntity)\",\r\n  \"OnTechTreeNodeUnlock(Workbench,TechTreeData.NodeInstance,BasePlayer)\": \"\",\r\n  \"OnBedMade(SleepingBag,BasePlayer)\": \"\",\r\n  \"OnVendingTransaction(VendingMachine,BasePlayer,int,int,ItemContainer)\": \"OnVendingTransaction(VendingMachine,BasePlayer,int,int)\",\r\n  \"OnClientCommand(Network.Connection,string)\": \"\",\r\n  \"OnResearchCostDetermine(ItemDefinition)\": \"\",\r\n  \"OnXmasLootDistribute(XMasRefill)\": \"\",\r\n  \"OnItemStacked(Item,Item,ItemContainer,int)\": \"\",\r\n  \"OnPhoneAnswered(PhoneController,PhoneController)\": \"\",\r\n  \"OnItemCraft(IndustrialCrafter,ItemBlueprint)\": \"OnItemCraft(ItemCraftTask,BasePlayer,Item)\",\r\n  \"OnEntityReskin(BaseEntity,ItemSkinDirectory.Skin,BasePlayer)\": \"\",\r\n  \"CanFastTrackCraftTask(ItemCrafter,ItemCraftTask,int)\": \"\",\r\n  \"OnAirdrop(CargoPlane,UnityEngine.Vector3)\": \"\",\r\n  \"CanFireLiquidWeapon(BasePlayer,LiquidWeapon)\": \"\",\r\n  \"CanAssignMission(BasePlayer,BaseMission,IMissionProvider)\": \"\",\r\n  \"OnWeaponModChange(BaseProjectile,BasePlayer)\": \"\",\r\n  \"OnRackedWeaponSwap(Item,WeaponRackSlot,BasePlayer,WeaponRack)\": \"\",\r\n  \"OnCorpsePopulate(FrankensteinPet,NPCPlayerCorpse)\": \"OnCorpsePopulate(NPCMurderer,NPCPlayerCorpse)\",\r\n  \"OnItemUnwrap(Item,BasePlayer,ItemModUnwrap)\": \"\",\r\n  \"OnItemDeployed(Deployer,ItemModDeployable,BaseEntity)\": \"OnItemDeployed(Deployer,BaseEntity)\",\r\n  \"OnMissionStarted(BaseMission,BaseMission.MissionInstance,BasePlayer)\": \"\",\r\n  \"OnStashOcclude(StashContainer)\": \"\",\r\n  \"OnRackedWeaponLoaded(Item,ItemDefinition,BasePlayer,WeaponRack)\": \"\",\r\n  \"OnPortalUse(BasePlayer,BasePortal)\": \"\",\r\n  \"OnRidableAnimalClaim(BaseRidableAnimal,BasePlayer,Item)\": \"OnRidableAnimalClaim(BaseRidableAnimal,BasePlayer)\",\r\n  \"OnMissionAssigned(BaseMission,IMissionProvider,BasePlayer)\": \"\",\r\n  \"OnTreeMarkerHit(TreeEntity,HitInfo)\": \"\",\r\n  \"OnItemRecycle(Item,Recycler)\": \"\",\r\n  \"CanHideStash(BasePlayer,StashContainer)\": \"\",\r\n  \"OnPlayerDismountFailed(BasePlayer,BaseMountable)\": \"\",\r\n  \"OnItemDespawn(Item)\": \"\",\r\n  \"OnNpcTarget(HumanNPC,BaseEntity)\": \"OnNpcTarget(HumanNPC,BasePlayer)\",\r\n  \"OnSprayCreate(SprayCan,UnityEngine.Vector3,UnityEngine.Quaternion)\": \"\",\r\n  \"CanUnlockTechTreeNodePath(BasePlayer,TechTreeData.NodeInstance,TechTreeData)\": \"\",\r\n  \"OnRackedWeaponSwapped(Item,WeaponRackSlot,BasePlayer,WeaponRack)\": \"\",\r\n  \"OnEntityReskinned(BaseEntity,ItemSkinDirectory.Skin,BasePlayer)\": \"\",\r\n  \"OnPlayerAddModifiers(BasePlayer,Item,ItemModConsumable)\": \"\",\r\n  \"CanSeeStash(BasePlayer,StashContainer)\": \"\",\r\n  \"OnIORefCleared(IOEntity.IORef,IOEntity)\": \"\",\r\n  \"OnWeaponReload(BaseProjectile,BasePlayer)\": \"\",\r\n  \"OnEntityDistanceCheck(BaseEntity,BasePlayer,uint,string,float,bool)\": \"OnEntityDistanceCheck(BaseEntity,BasePlayer,uint,string,float)\",\r\n  \"OnItemRecycleAmount(Item,int,Recycler)\": \"\",\r\n  \"OnQueueMessage(Network.Connection,int)\": \"\",\r\n  \"OnWindmillUpdated(ElectricWindmill)\": \"\",\r\n  \"OnEntityFlagsNetworkUpdate(BaseEntity)\": \"\",\r\n  \"OnEntityControl(PoweredRemoteControlEntity,ulong)\": \"OnEntityControl(RemoteControlEntity)\",\r\n  \"OnComposterUpdate(Composter)\": \"\",\r\n  \"OnXmasGiftsDistribute(XMasRefill,BasePlayer)\": \"\",\r\n  \"OnFuelItemCheck(EntityFuelSystem,StorageContainer)\": \"\",\r\n  \"OnRackedWeaponUnloaded(Item,BasePlayer,WeaponRack)\": \"\",\r\n  \"OnMlrsTarget(MLRS,UnityEngine.Vector3,BasePlayer)\": \"\",\r\n  \"OnInterferenceUpdate(AutoTurret)\": \"\",\r\n  \"OnIngredientsCollect(ItemCrafter,ItemBlueprint,ItemCraftTask,int,BasePlayer)\": \"\",\r\n  \"OnHuntEventStart(EggHuntEvent)\": \"\",\r\n  \"OnPhotoCapture(PhotoEntity,Item,BasePlayer,byte[])\": \"\",\r\n  \"CanExplosiveStick(TimedExplosive,BaseEntity)\": \"\",\r\n  \"OnVehicleLockableCheck(ModularCarCodeLock)\": \"OnVehicleLockableCheck(ModularCarLock)\",\r\n  \"OnPhotoCaptured(PhotoEntity,Item,BasePlayer,byte[])\": \"\",\r\n  \"OnMlrsFired(MLRS,BasePlayer)\": \"\",\r\n  \"CanBeHomingTargeted(AttackHeliPilotFlare)\": \"\",\r\n  \"OnRemoteIdentifierUpdate(PoweredRemoteControlEntity,string)\": \"\",\r\n  \"OnCargoPlaneSignaled(BaseEntity,SupplySignal)\": \"\",\r\n  \"OnSamSiteModeToggle(SamSite,BasePlayer,bool)\": \"\",\r\n  \"OnHelicopterAttack(CH47HelicopterAIController,HitInfo)\": \"OnHelicopterAttacked(CH47HelicopterAIController,HitInfo)\",\r\n  \"OnSleepingBagDestroyed(SleepingBag,ulong)\": \"OnSleepingBagDestroyed(SleepingBag,BasePlayer)\",\r\n  \"OnFishCaught(ItemDefinition,BaseFishingRod,BasePlayer)\": \"\",\r\n  \"OnInventoryItemsCount(PlayerInventory,int)\": \"\",\r\n  \"OnMlrsRocketFired(MLRS,ServerProjectile)\": \"\",\r\n  \"CanUpdateSign(BasePlayer,CarvablePumpkin)\": \"CanUpdateSign(BasePlayer,PhotoFrame)\",\r\n  \"CanSetRelationship(BasePlayer,BasePlayer,RelationshipManager.RelationshipType,int)\": \"\",\r\n  \"OnPlayerSleepEnd(BasePlayer)\": \"OnPlayerSleepEnded(BasePlayer)\",\r\n  \"OnMissionStart(BaseMission,BaseMission.MissionInstance,BasePlayer)\": \"\",\r\n  \"CanBeHomingTargeted(CH47Helicopter)\": \"\",\r\n  \"CanCheckFuel(EntityFuelSystem,StorageContainer,BasePlayer)\": \"\",\r\n  \"OnDecayHeal(DecayEntity)\": \"\",\r\n  \"OnItemCraftCancelled(ItemCraftTask,ItemCrafter)\": \"OnItemCraftCancelled(ItemCraftTask)\",\r\n  \"OnPhoneDialTimedOut(PhoneController,PhoneController,BasePlayer)\": \"\",\r\n  \"OnBookmarkControlEnded(ComputerStation,BasePlayer,BaseEntity)\": \"\",\r\n  \"OnFishingRodCast(BaseFishingRod,BasePlayer,Item)\": \"\",\r\n  \"OnClientDisconnected(Network.Connection,string)\": \"\",\r\n  \"OnNetworkSubscriptionsUpdate(Network.Networkable,System.Collections.Generic.List<Network.Visibility.Group>,unknown)\": \"\",\r\n  \"OnNetworkSubscriptionsUpdate(Network.Networkable,System.Collections.Generic.List<Network.Visibility.Group>,System.Collections.Generic.List<Network.Visibility.Group>)\": \"\",\r\n  \"OnApplicationCommand(BasePlayer,string,string[])\": \"\",\r\n  \"OnApplicationCommand(Oxide.Core.Libraries.Covalence.IPlayer,string,string[])\": \"\",\r\n  \"OnRconMessage(System.Net.IPAddress,Oxide.Core.RemoteConsole.RemoteMessage)\": \"\",\r\n  \"OnPlayerBanned(string,ulong,string,string,long)\": \"OnPlayerBanned(Network.Connection,string)\",\r\n  \"OnUserBanned(string,string,string,string,long)\": \"OnUserBanned(string,string,string,string)\",\r\n  \"OnClanMemberAdded(long,ulong)\": \"\"\r\n}";
        private Dictionary<string, string> _hooks = JsonConvert.DeserializeObject<Dictionary<string, string>>(_jsonHooks);

        private List<DiagnosticAnalyzerModel> _diagnosticAnalyzerModels = new List<DiagnosticAnalyzerModel>()
        {
            //new DiagnosticAnalyzerModel()
            //{
            //    DiagnosticId = "OnDoorKnockedError",
            //    Description = "The code should not contain 'OnDoorKnocked'",
            //    Category = "Syntax",
            //    MessageFormat = "Данный код устарел! Замените 'OnDoorKnocked(DoorKnocker,BasePlayer)' на 'OnItemCraftCancelled(ItemCraftTask task, ItemCrafter itemCrafter)'",
            //    Title = "OnDoorKnocked detected",
            //    RegexPattern = @"OnDoorKnocked\(\s*DoorKnocker\s[\d\w]+,\sBasePlayer\s[\d\w]+\)"
            //}
        };

        public List<DiagnosticAnalyzerModel> AnalyzeBaseOverrideModels => _diagnosticAnalyzerModels;
    
        public DiagnosticsAnalyzerConfigurationService236Dev()
        {
            _diagnosticAnalyzerModels.AddRange(new List<DiagnosticAnalyzerModel>());
            //    _hooks.Select(s => 
            //{
            //    var hookName = s.Key.Split("(").First();
            //    var parameters = s.Key.Split("(").Last().Replace(")", "").Split(",");

            //    return new DiagnosticAnalyzerModel()
            //    {
            //        DiagnosticId = $"{hookName}Error",
            //        Description = $"The code should not contain '{hookName}'",
            //        Category = "Syntax",
            //        MessageFormat = $"Данный хук с более новой версии Rust! Замените '{s.Key}' на {s.Value}",
            //        Title = $"{hookName} detected",
            //        RegexPattern = @$"{hookName}\({string.Join(',', parameters.Select(parametr => @$"\s*{parametr}\s[\d\w]+"))}\)"
            //    };
            //}));
        }
    }
}
